/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Banco;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import objetos.Seguradora;

public class App {

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        testeSelect();

        Seguradora seguradoraASerAdicionada = new Seguradora(100);
        seguradoraASerAdicionada.setNome("CANCELADO SA");
        seguradoraASerAdicionada.setCnpj("55555555555555");

        System.out.println("Linhas Adicionadas: " + testeInsert(seguradoraASerAdicionada));
        
        System.out.println("Linhas Deletadas: " + testeDelete(seguradoraASerAdicionada.getId()));

        Seguradora seguradoraASerAlterada = new Seguradora(2);
        seguradoraASerAlterada.setNome("GALINHA SA");
        seguradoraASerAlterada.setCnpj("09876543211234");

        System.out.println("Linhas alteradas: " + testeUpdate(seguradoraASerAlterada));
    }

    public static void testeSelect() {
        List<Seguradora> result = new ArrayList<>();

        String SQL_SELECT = "Select * from public.seguradora";

        // auto close connection and preparedStatement
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:18745/BANCO", "USUARIO", "SENHA"); PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {

                int id = resultSet.getInt("id");
                String nome = resultSet.getString("nome");
                String cnpj = resultSet.getString("cnpj");

                Seguradora seguradora = new Seguradora(id);
                seguradora.setNome(nome);
                seguradora.setCnpj(cnpj);

                result.add(seguradora);
            }

            result.forEach(x -> System.out.println(x.toString()));
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static int testeUpdate(Seguradora seguradora) {
        String SQL_SELECT = String.format(
                "UPDATE public.seguradora SET nome='%s',cnpj='%s' WHERE id=%d;",
                seguradora.getNome(), seguradora.getCnpj(), seguradora.getId());

        // auto close connection and preparedStatement
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:18745/BANCO", "USUARIO", "SENHA"); PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            return preparedStatement.executeUpdate();
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
            return 0;

        } catch (Exception e) {
            e.printStackTrace();
            return 0;

        }
    }

    public static int testeInsert(Seguradora seguradora) {
        String SQL_SELECT = String.format(
                "INSERT INTO public.seguradora (id, nome,cnpj) VALUES (%d,'%s','%s');",
                seguradora.getId(), seguradora.getNome(), seguradora.getCnpj());

        // auto close connection and preparedStatement
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:18745/BANCO", "USUARIO", "SENHA"); PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            return preparedStatement.executeUpdate();
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
            return 0;

        } catch (Exception e) {
            e.printStackTrace();
            return 0;

        }
    }

    public static int testeDelete(int id) {
        String SQL_SELECT = String.format(
                "DELETE FROM public.seguradora WHERE id=%d;", id);

        // auto close connection and preparedStatement
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:18745/BANCO", "USUARIO", "SENHA"); PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            return preparedStatement.executeUpdate();
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
            return 0;

        } catch (Exception e) {
            e.printStackTrace();
            return 0;

        }
    }

}
